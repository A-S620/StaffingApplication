// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyComponent should render correctly in "debug" mode 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(DaysOffTable)>
    <DaysOffTable
      daysoff={
        Array [
          Object {
            "Comment": "Approved by team lead",
            "EndDate": "24/07/2020",
            "PersonId": "2444",
            "RequestDate": "13/07/2020",
            "RequestId": "123",
            "StartDate": "20/07/2020",
            "TypeId": "1",
          },
        ]
      }
    >
      <WithStyles(ForwardRef(Paper))
        className="makeStyles-root-1"
      >
        <ForwardRef(Paper)
          className="makeStyles-root-1"
          classes={
            Object {
              "elevation0": "MuiPaper-elevation0",
              "elevation1": "MuiPaper-elevation1",
              "elevation10": "MuiPaper-elevation10",
              "elevation11": "MuiPaper-elevation11",
              "elevation12": "MuiPaper-elevation12",
              "elevation13": "MuiPaper-elevation13",
              "elevation14": "MuiPaper-elevation14",
              "elevation15": "MuiPaper-elevation15",
              "elevation16": "MuiPaper-elevation16",
              "elevation17": "MuiPaper-elevation17",
              "elevation18": "MuiPaper-elevation18",
              "elevation19": "MuiPaper-elevation19",
              "elevation2": "MuiPaper-elevation2",
              "elevation20": "MuiPaper-elevation20",
              "elevation21": "MuiPaper-elevation21",
              "elevation22": "MuiPaper-elevation22",
              "elevation23": "MuiPaper-elevation23",
              "elevation24": "MuiPaper-elevation24",
              "elevation3": "MuiPaper-elevation3",
              "elevation4": "MuiPaper-elevation4",
              "elevation5": "MuiPaper-elevation5",
              "elevation6": "MuiPaper-elevation6",
              "elevation7": "MuiPaper-elevation7",
              "elevation8": "MuiPaper-elevation8",
              "elevation9": "MuiPaper-elevation9",
              "outlined": "MuiPaper-outlined",
              "root": "MuiPaper-root",
              "rounded": "MuiPaper-rounded",
            }
          }
        >
          <div
            className="MuiPaper-root makeStyles-root-1 MuiPaper-elevation1 MuiPaper-rounded"
          >
            <WithStyles(ForwardRef(TableContainer))
              className="makeStyles-container-2"
            >
              <ForwardRef(TableContainer)
                className="makeStyles-container-2"
                classes={
                  Object {
                    "root": "MuiTableContainer-root",
                  }
                }
              >
                <div
                  className="MuiTableContainer-root makeStyles-container-2"
                >
                  <WithStyles(ForwardRef(Table))
                    aria-label="sticky table"
                    stickyHeader={true}
                  >
                    <ForwardRef(Table)
                      aria-label="sticky table"
                      classes={
                        Object {
                          "root": "MuiTable-root",
                          "stickyHeader": "MuiTable-stickyHeader",
                        }
                      }
                      stickyHeader={true}
                    >
                      <table
                        aria-label="sticky table"
                        className="MuiTable-root MuiTable-stickyHeader"
                        role={null}
                      >
                        <WithStyles(ForwardRef(TableHead))>
                          <ForwardRef(TableHead)
                            classes={
                              Object {
                                "root": "MuiTableHead-root",
                              }
                            }
                          >
                            <thead
                              className="MuiTableHead-root"
                              role={null}
                            >
                              <WithStyles(ForwardRef(TableRow))>
                                <ForwardRef(TableRow)
                                  classes={
                                    Object {
                                      "footer": "MuiTableRow-footer",
                                      "head": "MuiTableRow-head",
                                      "hover": "MuiTableRow-hover",
                                      "root": "MuiTableRow-root",
                                      "selected": "Mui-selected",
                                    }
                                  }
                                >
                                  <tr
                                    className="MuiTableRow-root MuiTableRow-head"
                                    role={null}
                                  >
                                    <WithStyles(ForwardRef(TableCell))
                                      key="RequestID"
                                      style={
                                        Object {
                                          "minWidth": 50,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "minWidth": 50,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-stickyHeader"
                                          scope="col"
                                          style={
                                            Object {
                                              "minWidth": 50,
                                            }
                                          }
                                        >
                                          Request ID
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="TypeId"
                                      style={
                                        Object {
                                          "minWidth": 50,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "minWidth": 50,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-stickyHeader"
                                          scope="col"
                                          style={
                                            Object {
                                              "minWidth": 50,
                                            }
                                          }
                                        >
                                          Type ID
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="PersonId"
                                      style={
                                        Object {
                                          "minWidth": 100,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "minWidth": 100,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-stickyHeader"
                                          scope="col"
                                          style={
                                            Object {
                                              "minWidth": 100,
                                            }
                                          }
                                        >
                                          Person ID
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="RequestDate"
                                      style={
                                        Object {
                                          "minWidth": 170,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "minWidth": 170,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-stickyHeader"
                                          scope="col"
                                          style={
                                            Object {
                                              "minWidth": 170,
                                            }
                                          }
                                        >
                                          Request Date
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="StartDate"
                                      style={
                                        Object {
                                          "minWidth": 170,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "minWidth": 170,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-stickyHeader"
                                          scope="col"
                                          style={
                                            Object {
                                              "minWidth": 170,
                                            }
                                          }
                                        >
                                          Start Date
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="EndDate"
                                      style={
                                        Object {
                                          "minWidth": 170,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "minWidth": 170,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-stickyHeader"
                                          scope="col"
                                          style={
                                            Object {
                                              "minWidth": 170,
                                            }
                                          }
                                        >
                                          End Date
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="Comment"
                                      style={
                                        Object {
                                          "minWidth": 170,
                                        }
                                      }
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        style={
                                          Object {
                                            "minWidth": 170,
                                          }
                                        }
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-stickyHeader"
                                          scope="col"
                                          style={
                                            Object {
                                              "minWidth": 170,
                                            }
                                          }
                                        >
                                          Comment
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                  </tr>
                                </ForwardRef(TableRow)>
                              </WithStyles(ForwardRef(TableRow))>
                            </thead>
                          </ForwardRef(TableHead)>
                        </WithStyles(ForwardRef(TableHead))>
                        <WithStyles(ForwardRef(TableBody))>
                          <ForwardRef(TableBody)
                            classes={
                              Object {
                                "root": "MuiTableBody-root",
                              }
                            }
                          >
                            <tbody
                              className="MuiTableBody-root"
                              role={null}
                            >
                              <WithStyles(ForwardRef(TableRow))
                                hover={true}
                                key="123"
                                role="checkbox"
                                tabIndex={-1}
                              >
                                <ForwardRef(TableRow)
                                  classes={
                                    Object {
                                      "footer": "MuiTableRow-footer",
                                      "head": "MuiTableRow-head",
                                      "hover": "MuiTableRow-hover",
                                      "root": "MuiTableRow-root",
                                      "selected": "Mui-selected",
                                    }
                                  }
                                  hover={true}
                                  role="checkbox"
                                  tabIndex={-1}
                                >
                                  <tr
                                    className="MuiTableRow-root MuiTableRow-hover"
                                    role="checkbox"
                                    tabIndex={-1}
                                  >
                                    <WithStyles(ForwardRef(TableCell))
                                      key="RequestID"
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                      >
                                        <td
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-body"
                                        />
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="TypeId"
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                      >
                                        <td
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-body"
                                        >
                                          1
                                        </td>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="PersonId"
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                      >
                                        <td
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-body"
                                        >
                                          2444
                                        </td>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="RequestDate"
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                      >
                                        <td
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-body"
                                        >
                                          13/07/2020
                                        </td>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="StartDate"
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                      >
                                        <td
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-body"
                                        >
                                          20/07/2020
                                        </td>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="EndDate"
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                      >
                                        <td
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-body"
                                        >
                                          24/07/2020
                                        </td>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      key="Comment"
                                    >
                                      <ForwardRef(TableCell)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                      >
                                        <td
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-body"
                                        >
                                          Approved by team lead
                                        </td>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                  </tr>
                                </ForwardRef(TableRow)>
                              </WithStyles(ForwardRef(TableRow))>
                            </tbody>
                          </ForwardRef(TableBody)>
                        </WithStyles(ForwardRef(TableBody))>
                      </table>
                    </ForwardRef(Table)>
                  </WithStyles(ForwardRef(Table))>
                </div>
              </ForwardRef(TableContainer)>
            </WithStyles(ForwardRef(TableContainer))>
            <WithStyles(ForwardRef(TablePagination))
              component="div"
              count={1}
              onChangePage={[Function]}
              onChangeRowsPerPage={[Function]}
              page={0}
              rowsPerPage={10}
              rowsPerPageOptions={
                Array [
                  10,
                  25,
                  100,
                ]
              }
            >
              <ForwardRef(TablePagination)
                classes={
                  Object {
                    "actions": "MuiTablePagination-actions",
                    "caption": "MuiTablePagination-caption",
                    "input": "MuiTablePagination-input",
                    "menuItem": "MuiTablePagination-menuItem",
                    "root": "MuiTablePagination-root",
                    "select": "MuiTablePagination-select",
                    "selectIcon": "MuiTablePagination-selectIcon",
                    "selectRoot": "MuiTablePagination-selectRoot",
                    "spacer": "MuiTablePagination-spacer",
                    "toolbar": "MuiTablePagination-toolbar",
                  }
                }
                component="div"
                count={1}
                onChangePage={[Function]}
                onChangeRowsPerPage={[Function]}
                page={0}
                rowsPerPage={10}
                rowsPerPageOptions={
                  Array [
                    10,
                    25,
                    100,
                  ]
                }
              >
                <div
                  className="MuiTablePagination-root"
                >
                  <WithStyles(ForwardRef(Toolbar))
                    className="MuiTablePagination-toolbar"
                  >
                    <ForwardRef(Toolbar)
                      className="MuiTablePagination-toolbar"
                      classes={
                        Object {
                          "dense": "MuiToolbar-dense",
                          "gutters": "MuiToolbar-gutters",
                          "regular": "MuiToolbar-regular",
                          "root": "MuiToolbar-root",
                        }
                      }
                    >
                      <div
                        className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                      >
                        <div
                          className="MuiTablePagination-spacer"
                        />
                        <WithStyles(ForwardRef(Typography))
                          className="MuiTablePagination-caption"
                          color="inherit"
                          id="mui-39436"
                          variant="body2"
                        >
                          <ForwardRef(Typography)
                            className="MuiTablePagination-caption"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="inherit"
                            id="mui-39436"
                            variant="body2"
                          >
                            <p
                              className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                              id="mui-39436"
                            >
                              Rows per page:
                            </p>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                        <WithStyles(ForwardRef(Select))
                          classes={
                            Object {
                              "icon": "MuiTablePagination-selectIcon",
                              "select": "MuiTablePagination-select",
                            }
                          }
                          id="mui-85433"
                          input={
                            <ForwardRef(WithStyles)
                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                            />
                          }
                          labelId="mui-39436"
                          onChange={[Function]}
                          value={10}
                        >
                          <ForwardRef(Select)
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "nativeInput": "MuiSelect-nativeInput",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select MuiTablePagination-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            id="mui-85433"
                            input={
                              <ForwardRef(WithStyles)
                                className="MuiTablePagination-input MuiTablePagination-selectRoot"
                              />
                            }
                            labelId="mui-39436"
                            onChange={[Function]}
                            value={10}
                          >
                            <WithStyles(ForwardRef(InputBase))
                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": undefined,
                                  "SelectDisplayProps": Object {
                                    "id": "mui-85433",
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <ForwardRef(WithStyles)
                                      className="MuiTablePagination-menuItem"
                                      value={10}
                                    >
                                      10
                                    </ForwardRef(WithStyles)>,
                                    <ForwardRef(WithStyles)
                                      className="MuiTablePagination-menuItem"
                                      value={25}
                                    >
                                      25
                                    </ForwardRef(WithStyles)>,
                                    <ForwardRef(WithStyles)
                                      className="MuiTablePagination-menuItem"
                                      value={100}
                                    >
                                      100
                                    </ForwardRef(WithStyles)>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select MuiTablePagination-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": false,
                                  "labelId": "mui-39436",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              value={10}
                            >
                              <ForwardRef(InputBase)
                                className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart",
                                    "colorSecondary": "MuiInputBase-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInputBase-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth",
                                    "input": "MuiInputBase-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense",
                                    "multiline": "MuiInputBase-multiline",
                                    "root": "MuiInputBase-root",
                                  }
                                }
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "MenuProps": [Function],
                                      "SelectDisplayProps": [Function],
                                      "aria-label": [Function],
                                      "autoFocus": [Function],
                                      "autoWidth": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "defaultValue": [Function],
                                      "disabled": [Function],
                                      "displayEmpty": [Function],
                                      "inputRef": [Function],
                                      "labelId": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onClose": [Function],
                                      "onFocus": [Function],
                                      "onOpen": [Function],
                                      "open": [Function],
                                      "readOnly": [Function],
                                      "renderValue": [Function],
                                      "tabIndex": [Function],
                                      "type": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "MenuProps": undefined,
                                    "SelectDisplayProps": Object {
                                      "id": "mui-85433",
                                    },
                                    "autoWidth": false,
                                    "children": Array [
                                      <ForwardRef(WithStyles)
                                        className="MuiTablePagination-menuItem"
                                        value={10}
                                      >
                                        10
                                      </ForwardRef(WithStyles)>,
                                      <ForwardRef(WithStyles)
                                        className="MuiTablePagination-menuItem"
                                        value={25}
                                      >
                                        25
                                      </ForwardRef(WithStyles)>,
                                      <ForwardRef(WithStyles)
                                        className="MuiTablePagination-menuItem"
                                        value={100}
                                      >
                                        100
                                      </ForwardRef(WithStyles)>,
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select MuiTablePagination-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "displayEmpty": false,
                                    "labelId": "mui-39436",
                                    "multiple": false,
                                    "onClose": undefined,
                                    "onOpen": undefined,
                                    "open": undefined,
                                    "renderValue": undefined,
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                onChange={[Function]}
                                value={10}
                              >
                                <div
                                  className="MuiInputBase-root MuiTablePagination-input MuiTablePagination-selectRoot"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(SelectInput)
                                    IconComponent={
                                      Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      }
                                    }
                                    SelectDisplayProps={
                                      Object {
                                        "id": "mui-85433",
                                      }
                                    }
                                    autoWidth={false}
                                    className="MuiInputBase-input"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "nativeInput": "MuiSelect-nativeInput",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select MuiTablePagination-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      }
                                    }
                                    displayEmpty={false}
                                    inputRef={[Function]}
                                    labelId="mui-39436"
                                    multiple={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value={10}
                                    variant="standard"
                                  >
                                    <div
                                      aria-haspopup="listbox"
                                      aria-labelledby="mui-39436 mui-85433"
                                      className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                      id="mui-85433"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseDown={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      10
                                    </div>
                                    <input
                                      aria-hidden={true}
                                      className="MuiSelect-nativeInput"
                                      onAnimationStart={[Function]}
                                      onChange={[Function]}
                                      tabIndex={-1}
                                      value={10}
                                    />
                                    <ForwardRef(ArrowDropDownIcon)
                                      className="MuiSelect-icon MuiTablePagination-selectIcon"
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        className="MuiSelect-icon MuiTablePagination-selectIcon"
                                      >
                                        <ForwardRef(SvgIcon)
                                          className="MuiSelect-icon MuiTablePagination-selectIcon"
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7 10l5 5 5-5z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(ArrowDropDownIcon)>
                                    <WithStyles(ForwardRef(Menu))
                                      MenuListProps={
                                        Object {
                                          "aria-labelledby": "mui-39436",
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="mui-39436 mui-85433"
                                          class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                          id="mui-85433"
                                          role="button"
                                          tabindex="0"
                                        >
                                          10
                                        </div>
                                      }
                                      id="menu-"
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Menu)
                                        MenuListProps={
                                          Object {
                                            "aria-labelledby": "mui-39436",
                                            "disableListWrap": true,
                                            "role": "listbox",
                                          }
                                        }
                                        PaperProps={
                                          Object {
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="mui-39436 mui-85433"
                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                            id="mui-85433"
                                            role="button"
                                            tabindex="0"
                                          >
                                            10
                                          </div>
                                        }
                                        classes={
                                          Object {
                                            "list": "MuiMenu-list",
                                            "paper": "MuiMenu-paper",
                                          }
                                        }
                                        id="menu-"
                                        onClose={[Function]}
                                        open={false}
                                      >
                                        <WithStyles(ForwardRef(Popover))
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="mui-39436 mui-85433"
                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                              id="mui-85433"
                                              role="button"
                                              tabindex="0"
                                            >
                                              10
                                            </div>
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          id="menu-"
                                          onClose={[Function]}
                                          onEntering={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Popover)
                                            PaperProps={
                                              Object {
                                                "classes": Object {
                                                  "root": "MuiMenu-paper",
                                                },
                                                "style": Object {
                                                  "minWidth": undefined,
                                                },
                                              }
                                            }
                                            anchorEl={
                                              <div
                                                aria-haspopup="listbox"
                                                aria-labelledby="mui-39436 mui-85433"
                                                class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                id="mui-85433"
                                                role="button"
                                                tabindex="0"
                                              >
                                                10
                                              </div>
                                            }
                                            anchorOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            classes={
                                              Object {
                                                "paper": "MuiPopover-paper",
                                                "root": "MuiPopover-root",
                                              }
                                            }
                                            getContentAnchorEl={[Function]}
                                            id="menu-"
                                            onClose={[Function]}
                                            onEntering={[Function]}
                                            open={false}
                                            transformOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            transitionDuration="auto"
                                          >
                                            <ForwardRef(Modal)
                                              BackdropProps={
                                                Object {
                                                  "invisible": true,
                                                }
                                              }
                                              className="MuiPopover-root"
                                              container={<body />}
                                              id="menu-"
                                              onClose={[Function]}
                                              open={false}
                                            />
                                          </ForwardRef(Popover)>
                                        </WithStyles(ForwardRef(Popover))>
                                      </ForwardRef(Menu)>
                                    </WithStyles(ForwardRef(Menu))>
                                  </ForwardRef(SelectInput)>
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(Select)>
                        </WithStyles(ForwardRef(Select))>
                        <WithStyles(ForwardRef(Typography))
                          className="MuiTablePagination-caption"
                          color="inherit"
                          variant="body2"
                        >
                          <ForwardRef(Typography)
                            className="MuiTablePagination-caption"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="inherit"
                            variant="body2"
                          >
                            <p
                              className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                            >
                              1-1 of 1
                            </p>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                        <ForwardRef(TablePaginationActions)
                          backIconButtonProps={
                            Object {
                              "aria-label": "Previous page",
                              "title": "Previous page",
                            }
                          }
                          className="MuiTablePagination-actions"
                          count={1}
                          nextIconButtonProps={
                            Object {
                              "aria-label": "Next page",
                              "title": "Next page",
                            }
                          }
                          onChangePage={[Function]}
                          page={0}
                          rowsPerPage={10}
                        >
                          <div
                            className="MuiTablePagination-actions"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-label="Previous page"
                              color="inherit"
                              disabled={true}
                              onClick={[Function]}
                              title="Previous page"
                            >
                              <ForwardRef(IconButton)
                                aria-label="Previous page"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                color="inherit"
                                disabled={true}
                                onClick={[Function]}
                                title="Previous page"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-label="Previous page"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                  disabled={true}
                                  focusRipple={true}
                                  onClick={[Function]}
                                  title="Previous page"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-label="Previous page"
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={true}
                                    focusRipple={true}
                                    onClick={[Function]}
                                    title="Previous page"
                                  >
                                    <button
                                      aria-label="Previous page"
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                      disabled={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={-1}
                                      title="Previous page"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(KeyboardArrowLeftIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(KeyboardArrowLeftIcon)>
                                      </span>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(IconButton))
                              aria-label="Next page"
                              color="inherit"
                              disabled={true}
                              onClick={[Function]}
                              title="Next page"
                            >
                              <ForwardRef(IconButton)
                                aria-label="Next page"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                color="inherit"
                                disabled={true}
                                onClick={[Function]}
                                title="Next page"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-label="Next page"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                  disabled={true}
                                  focusRipple={true}
                                  onClick={[Function]}
                                  title="Next page"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-label="Next page"
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={true}
                                    focusRipple={true}
                                    onClick={[Function]}
                                    title="Next page"
                                  >
                                    <button
                                      aria-label="Next page"
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                      disabled={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={-1}
                                      title="Next page"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(KeyboardArrowRightIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(KeyboardArrowRightIcon)>
                                      </span>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </div>
                        </ForwardRef(TablePaginationActions)>
                      </div>
                    </ForwardRef(Toolbar)>
                  </WithStyles(ForwardRef(Toolbar))>
                </div>
              </ForwardRef(TablePagination)>
            </WithStyles(ForwardRef(TablePagination))>
          </div>
        </ForwardRef(Paper)>
      </WithStyles(ForwardRef(Paper))>
    </DaysOffTable>
  </Connect(DaysOffTable)>
</Provider>
`;
