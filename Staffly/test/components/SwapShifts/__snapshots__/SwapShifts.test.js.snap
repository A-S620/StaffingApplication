// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App  should render correctly 1`] = `
<SwapShifts>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    container={true}
    direction="row"
    justify="center"
    style={
      Object {
        "marginTop": 10,
      }
    }
  >
    <ForwardRef(Grid)
      alignItems="center"
      classes={
        Object {
          "align-content-xs-center": "MuiGrid-align-content-xs-center",
          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
          "align-items-xs-center": "MuiGrid-align-items-xs-center",
          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
          "container": "MuiGrid-container",
          "direction-xs-column": "MuiGrid-direction-xs-column",
          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
          "grid-lg-1": "MuiGrid-grid-lg-1",
          "grid-lg-10": "MuiGrid-grid-lg-10",
          "grid-lg-11": "MuiGrid-grid-lg-11",
          "grid-lg-12": "MuiGrid-grid-lg-12",
          "grid-lg-2": "MuiGrid-grid-lg-2",
          "grid-lg-3": "MuiGrid-grid-lg-3",
          "grid-lg-4": "MuiGrid-grid-lg-4",
          "grid-lg-5": "MuiGrid-grid-lg-5",
          "grid-lg-6": "MuiGrid-grid-lg-6",
          "grid-lg-7": "MuiGrid-grid-lg-7",
          "grid-lg-8": "MuiGrid-grid-lg-8",
          "grid-lg-9": "MuiGrid-grid-lg-9",
          "grid-lg-auto": "MuiGrid-grid-lg-auto",
          "grid-lg-true": "MuiGrid-grid-lg-true",
          "grid-md-1": "MuiGrid-grid-md-1",
          "grid-md-10": "MuiGrid-grid-md-10",
          "grid-md-11": "MuiGrid-grid-md-11",
          "grid-md-12": "MuiGrid-grid-md-12",
          "grid-md-2": "MuiGrid-grid-md-2",
          "grid-md-3": "MuiGrid-grid-md-3",
          "grid-md-4": "MuiGrid-grid-md-4",
          "grid-md-5": "MuiGrid-grid-md-5",
          "grid-md-6": "MuiGrid-grid-md-6",
          "grid-md-7": "MuiGrid-grid-md-7",
          "grid-md-8": "MuiGrid-grid-md-8",
          "grid-md-9": "MuiGrid-grid-md-9",
          "grid-md-auto": "MuiGrid-grid-md-auto",
          "grid-md-true": "MuiGrid-grid-md-true",
          "grid-sm-1": "MuiGrid-grid-sm-1",
          "grid-sm-10": "MuiGrid-grid-sm-10",
          "grid-sm-11": "MuiGrid-grid-sm-11",
          "grid-sm-12": "MuiGrid-grid-sm-12",
          "grid-sm-2": "MuiGrid-grid-sm-2",
          "grid-sm-3": "MuiGrid-grid-sm-3",
          "grid-sm-4": "MuiGrid-grid-sm-4",
          "grid-sm-5": "MuiGrid-grid-sm-5",
          "grid-sm-6": "MuiGrid-grid-sm-6",
          "grid-sm-7": "MuiGrid-grid-sm-7",
          "grid-sm-8": "MuiGrid-grid-sm-8",
          "grid-sm-9": "MuiGrid-grid-sm-9",
          "grid-sm-auto": "MuiGrid-grid-sm-auto",
          "grid-sm-true": "MuiGrid-grid-sm-true",
          "grid-xl-1": "MuiGrid-grid-xl-1",
          "grid-xl-10": "MuiGrid-grid-xl-10",
          "grid-xl-11": "MuiGrid-grid-xl-11",
          "grid-xl-12": "MuiGrid-grid-xl-12",
          "grid-xl-2": "MuiGrid-grid-xl-2",
          "grid-xl-3": "MuiGrid-grid-xl-3",
          "grid-xl-4": "MuiGrid-grid-xl-4",
          "grid-xl-5": "MuiGrid-grid-xl-5",
          "grid-xl-6": "MuiGrid-grid-xl-6",
          "grid-xl-7": "MuiGrid-grid-xl-7",
          "grid-xl-8": "MuiGrid-grid-xl-8",
          "grid-xl-9": "MuiGrid-grid-xl-9",
          "grid-xl-auto": "MuiGrid-grid-xl-auto",
          "grid-xl-true": "MuiGrid-grid-xl-true",
          "grid-xs-1": "MuiGrid-grid-xs-1",
          "grid-xs-10": "MuiGrid-grid-xs-10",
          "grid-xs-11": "MuiGrid-grid-xs-11",
          "grid-xs-12": "MuiGrid-grid-xs-12",
          "grid-xs-2": "MuiGrid-grid-xs-2",
          "grid-xs-3": "MuiGrid-grid-xs-3",
          "grid-xs-4": "MuiGrid-grid-xs-4",
          "grid-xs-5": "MuiGrid-grid-xs-5",
          "grid-xs-6": "MuiGrid-grid-xs-6",
          "grid-xs-7": "MuiGrid-grid-xs-7",
          "grid-xs-8": "MuiGrid-grid-xs-8",
          "grid-xs-9": "MuiGrid-grid-xs-9",
          "grid-xs-auto": "MuiGrid-grid-xs-auto",
          "grid-xs-true": "MuiGrid-grid-xs-true",
          "item": "MuiGrid-item",
          "justify-xs-center": "MuiGrid-justify-xs-center",
          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
          "root": "MuiGrid-root",
          "spacing-xs-1": "MuiGrid-spacing-xs-1",
          "spacing-xs-10": "MuiGrid-spacing-xs-10",
          "spacing-xs-2": "MuiGrid-spacing-xs-2",
          "spacing-xs-3": "MuiGrid-spacing-xs-3",
          "spacing-xs-4": "MuiGrid-spacing-xs-4",
          "spacing-xs-5": "MuiGrid-spacing-xs-5",
          "spacing-xs-6": "MuiGrid-spacing-xs-6",
          "spacing-xs-7": "MuiGrid-spacing-xs-7",
          "spacing-xs-8": "MuiGrid-spacing-xs-8",
          "spacing-xs-9": "MuiGrid-spacing-xs-9",
          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
          "zeroMinWidth": "MuiGrid-zeroMinWidth",
        }
      }
      container={true}
      direction="row"
      justify="center"
      style={
        Object {
          "marginTop": 10,
        }
      }
    >
      <div
        className="MuiGrid-root MuiGrid-container MuiGrid-align-items-xs-center MuiGrid-justify-xs-center"
        style={
          Object {
            "marginTop": 10,
          }
        }
      >
        <WithStyles(ForwardRef(Grid))
          alignItems="center"
          container={true}
          direction="column"
          justify="flex-start"
          style={
            Object {
              "marginBottom": 20,
            }
          }
        >
          <ForwardRef(Grid)
            alignItems="center"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-xs-center": "MuiGrid-justify-xs-center",
                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            container={true}
            direction="column"
            justify="flex-start"
            style={
              Object {
                "marginBottom": 20,
              }
            }
          >
            <div
              className="MuiGrid-root MuiGrid-container MuiGrid-direction-xs-column MuiGrid-align-items-xs-center"
              style={
                Object {
                  "marginBottom": 20,
                }
              }
            >
              <SwapCard>
                <WithStyles(ForwardRef(Paper))
                  display="flex"
                  justifyContent="center"
                  orientation="vertical"
                >
                  <ForwardRef(Paper)
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0",
                        "elevation1": "MuiPaper-elevation1",
                        "elevation10": "MuiPaper-elevation10",
                        "elevation11": "MuiPaper-elevation11",
                        "elevation12": "MuiPaper-elevation12",
                        "elevation13": "MuiPaper-elevation13",
                        "elevation14": "MuiPaper-elevation14",
                        "elevation15": "MuiPaper-elevation15",
                        "elevation16": "MuiPaper-elevation16",
                        "elevation17": "MuiPaper-elevation17",
                        "elevation18": "MuiPaper-elevation18",
                        "elevation19": "MuiPaper-elevation19",
                        "elevation2": "MuiPaper-elevation2",
                        "elevation20": "MuiPaper-elevation20",
                        "elevation21": "MuiPaper-elevation21",
                        "elevation22": "MuiPaper-elevation22",
                        "elevation23": "MuiPaper-elevation23",
                        "elevation24": "MuiPaper-elevation24",
                        "elevation3": "MuiPaper-elevation3",
                        "elevation4": "MuiPaper-elevation4",
                        "elevation5": "MuiPaper-elevation5",
                        "elevation6": "MuiPaper-elevation6",
                        "elevation7": "MuiPaper-elevation7",
                        "elevation8": "MuiPaper-elevation8",
                        "elevation9": "MuiPaper-elevation9",
                        "outlined": "MuiPaper-outlined",
                        "root": "MuiPaper-root",
                        "rounded": "MuiPaper-rounded",
                      }
                    }
                    display="flex"
                    justifyContent="center"
                    orientation="vertical"
                  >
                    <div
                      className="MuiPaper-root MuiPaper-elevation1 MuiPaper-rounded"
                      display="flex"
                      justifyContent="center"
                      orientation="vertical"
                    >
                      <WithStyles(ForwardRef(CardContent))>
                        <ForwardRef(CardContent)
                          classes={
                            Object {
                              "root": "MuiCardContent-root",
                            }
                          }
                        >
                          <div
                            className="MuiCardContent-root"
                          >
                            <Styled(MuiBox)
                              display="flex"
                              justifyContent="center"
                              orientation="vertical"
                            >
                              <div
                                className="MuiBox-root MuiBox-root-5"
                                orientation="vertical"
                              >
                                <UserShifts>
                                  <WithStyles(ForwardRef(FormControl))
                                    className="makeStyles-formControl-6"
                                  >
                                    <ForwardRef(FormControl)
                                      className="makeStyles-formControl-6"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiFormControl-root makeStyles-formControl-6"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))
                                          htmlFor="type-selector"
                                        >
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                            htmlFor="type-selector"
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="type-selector"
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="type-selector"
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                  data-shrink={false}
                                                  htmlFor="type-selector"
                                                >
                                                  Your Shift
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(Select))
                                          inputProps={
                                            Object {
                                              "id": "type-selector",
                                              "name": "typeSelector",
                                            }
                                          }
                                          native={true}
                                          onChange={[Function]}
                                          value={
                                            Object {
                                              "typeSelect": "",
                                            }
                                          }
                                        >
                                          <ForwardRef(Select)
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "id": "type-selector",
                                                "name": "typeSelector",
                                              }
                                            }
                                            native={true}
                                            onChange={[Function]}
                                            value={
                                              Object {
                                                "typeSelect": "",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(Input))
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "disabled": [Function],
                                                    "inputRef": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onChange": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "children": Array [
                                                    <option
                                                      aria-label="None"
                                                      value=""
                                                    />,
                                                    <option
                                                      value={1}
                                                    >
                                                      Vacation
                                                    </option>,
                                                    <option
                                                      value={2}
                                                    >
                                                      Designated Holiday
                                                    </option>,
                                                    <option
                                                      value={3}
                                                    >
                                                      Illness
                                                    </option>,
                                                    <option
                                                      value={4}
                                                    >
                                                      Non-work learning/ Training
                                                    </option>,
                                                    <option
                                                      value={5}
                                                    >
                                                      Work learning/ Training
                                                    </option>,
                                                    <option
                                                      value={6}
                                                    >
                                                      Military Time Off
                                                    </option>,
                                                    <option
                                                      value={7}
                                                    >
                                                      Parenting Time Off
                                                    </option>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "id": "type-selector",
                                                  "multiple": false,
                                                  "name": "typeSelector",
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              onChange={[Function]}
                                              value={
                                                Object {
                                                  "typeSelect": "",
                                                }
                                              }
                                            >
                                              <ForwardRef(Input)
                                                classes={
                                                  Object {
                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInput-formControl",
                                                    "fullWidth": "MuiInput-fullWidth",
                                                    "input": "MuiInput-input",
                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInput-marginDense",
                                                    "multiline": "MuiInput-multiline",
                                                    "root": "MuiInput-root",
                                                    "underline": "MuiInput-underline",
                                                  }
                                                }
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "disabled": [Function],
                                                      "inputRef": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onChange": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "children": Array [
                                                      <option
                                                        aria-label="None"
                                                        value=""
                                                      />,
                                                      <option
                                                        value={1}
                                                      >
                                                        Vacation
                                                      </option>,
                                                      <option
                                                        value={2}
                                                      >
                                                        Designated Holiday
                                                      </option>,
                                                      <option
                                                        value={3}
                                                      >
                                                        Illness
                                                      </option>,
                                                      <option
                                                        value={4}
                                                      >
                                                        Non-work learning/ Training
                                                      </option>,
                                                      <option
                                                        value={5}
                                                      >
                                                        Work learning/ Training
                                                      </option>,
                                                      <option
                                                        value={6}
                                                      >
                                                        Military Time Off
                                                      </option>,
                                                      <option
                                                        value={7}
                                                      >
                                                        Parenting Time Off
                                                      </option>,
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "id": "type-selector",
                                                    "multiple": false,
                                                    "name": "typeSelector",
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                onChange={[Function]}
                                                value={
                                                  Object {
                                                    "typeSelect": "",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(InputBase))
                                                  classes={
                                                    Object {
                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "error": "Mui-error",
                                                      "focused": "Mui-focused",
                                                      "formControl": "MuiInput-formControl",
                                                      "fullWidth": "MuiInput-fullWidth",
                                                      "input": "MuiInput-input",
                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                      "marginDense": "MuiInput-marginDense",
                                                      "multiline": "MuiInput-multiline",
                                                      "root": "MuiInput-root MuiInput-underline",
                                                      "underline": null,
                                                    }
                                                  }
                                                  fullWidth={false}
                                                  inputComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {
                                                        "IconComponent": [Function],
                                                        "children": [Function],
                                                        "className": [Function],
                                                        "classes": [Function],
                                                        "disabled": [Function],
                                                        "inputRef": [Function],
                                                        "multiple": [Function],
                                                        "name": [Function],
                                                        "onChange": [Function],
                                                        "value": [Function],
                                                        "variant": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  inputProps={
                                                    Object {
                                                      "IconComponent": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "children": Array [
                                                        <option
                                                          aria-label="None"
                                                          value=""
                                                        />,
                                                        <option
                                                          value={1}
                                                        >
                                                          Vacation
                                                        </option>,
                                                        <option
                                                          value={2}
                                                        >
                                                          Designated Holiday
                                                        </option>,
                                                        <option
                                                          value={3}
                                                        >
                                                          Illness
                                                        </option>,
                                                        <option
                                                          value={4}
                                                        >
                                                          Non-work learning/ Training
                                                        </option>,
                                                        <option
                                                          value={5}
                                                        >
                                                          Work learning/ Training
                                                        </option>,
                                                        <option
                                                          value={6}
                                                        >
                                                          Military Time Off
                                                        </option>,
                                                        <option
                                                          value={7}
                                                        >
                                                          Parenting Time Off
                                                        </option>,
                                                      ],
                                                      "classes": Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      },
                                                      "id": "type-selector",
                                                      "multiple": false,
                                                      "name": "typeSelector",
                                                      "type": undefined,
                                                      "variant": "standard",
                                                    }
                                                  }
                                                  multiline={false}
                                                  onChange={[Function]}
                                                  type="text"
                                                  value={
                                                    Object {
                                                      "typeSelect": "",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(InputBase)
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                                        "adornedStart": "MuiInputBase-adornedStart",
                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled Mui-disabled",
                                                        "error": "Mui-error Mui-error",
                                                        "focused": "Mui-focused Mui-focused",
                                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                        "input": "MuiInputBase-input MuiInput-input",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    inputComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {
                                                          "IconComponent": [Function],
                                                          "children": [Function],
                                                          "className": [Function],
                                                          "classes": [Function],
                                                          "disabled": [Function],
                                                          "inputRef": [Function],
                                                          "multiple": [Function],
                                                          "name": [Function],
                                                          "onChange": [Function],
                                                          "value": [Function],
                                                          "variant": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    inputProps={
                                                      Object {
                                                        "IconComponent": Object {
                                                          "$$typeof": Symbol(react.memo),
                                                          "compare": null,
                                                          "type": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          },
                                                        },
                                                        "children": Array [
                                                          <option
                                                            aria-label="None"
                                                            value=""
                                                          />,
                                                          <option
                                                            value={1}
                                                          >
                                                            Vacation
                                                          </option>,
                                                          <option
                                                            value={2}
                                                          >
                                                            Designated Holiday
                                                          </option>,
                                                          <option
                                                            value={3}
                                                          >
                                                            Illness
                                                          </option>,
                                                          <option
                                                            value={4}
                                                          >
                                                            Non-work learning/ Training
                                                          </option>,
                                                          <option
                                                            value={5}
                                                          >
                                                            Work learning/ Training
                                                          </option>,
                                                          <option
                                                            value={6}
                                                          >
                                                            Military Time Off
                                                          </option>,
                                                          <option
                                                            value={7}
                                                          >
                                                            Parenting Time Off
                                                          </option>,
                                                        ],
                                                        "classes": Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "nativeInput": "MuiSelect-nativeInput",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        },
                                                        "id": "type-selector",
                                                        "multiple": false,
                                                        "name": "typeSelector",
                                                        "type": undefined,
                                                        "variant": "standard",
                                                      }
                                                    }
                                                    multiline={false}
                                                    onChange={[Function]}
                                                    type="text"
                                                    value={
                                                      Object {
                                                        "typeSelect": "",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(NativeSelectInput)
                                                        IconComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.memo),
                                                            "compare": null,
                                                            "type": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            },
                                                          }
                                                        }
                                                        aria-invalid={false}
                                                        className="MuiInputBase-input MuiInput-input"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          }
                                                        }
                                                        disabled={false}
                                                        id="type-selector"
                                                        inputRef={[Function]}
                                                        multiple={false}
                                                        name="typeSelector"
                                                        onAnimationStart={[Function]}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        required={false}
                                                        value={
                                                          Object {
                                                            "typeSelect": "",
                                                          }
                                                        }
                                                        variant="standard"
                                                      >
                                                        <select
                                                          aria-invalid={false}
                                                          className="MuiSelect-root MuiSelect-select MuiInputBase-input MuiInput-input"
                                                          disabled={false}
                                                          id="type-selector"
                                                          multiple={false}
                                                          name="typeSelector"
                                                          onAnimationStart={[Function]}
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          required={false}
                                                          value={
                                                            Object {
                                                              "typeSelect": "",
                                                            }
                                                          }
                                                        >
                                                          <option
                                                            aria-label="None"
                                                            value=""
                                                          />
                                                          <option
                                                            value={1}
                                                          >
                                                            Vacation
                                                          </option>
                                                          <option
                                                            value={2}
                                                          >
                                                            Designated Holiday
                                                          </option>
                                                          <option
                                                            value={3}
                                                          >
                                                            Illness
                                                          </option>
                                                          <option
                                                            value={4}
                                                          >
                                                            Non-work learning/ Training
                                                          </option>
                                                          <option
                                                            value={5}
                                                          >
                                                            Work learning/ Training
                                                          </option>
                                                          <option
                                                            value={6}
                                                          >
                                                            Military Time Off
                                                          </option>
                                                          <option
                                                            value={7}
                                                          >
                                                            Parenting Time Off
                                                          </option>
                                                        </select>
                                                        <ForwardRef(ArrowDropDownIcon)
                                                          className="MuiSelect-icon"
                                                        >
                                                          <WithStyles(ForwardRef(SvgIcon))
                                                            className="MuiSelect-icon"
                                                          >
                                                            <ForwardRef(SvgIcon)
                                                              className="MuiSelect-icon"
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root MuiSelect-icon"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M7 10l5 5 5-5z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(ArrowDropDownIcon)>
                                                      </ForwardRef(NativeSelectInput)>
                                                    </div>
                                                  </ForwardRef(InputBase)>
                                                </WithStyles(ForwardRef(InputBase))>
                                              </ForwardRef(Input)>
                                            </WithStyles(ForwardRef(Input))>
                                          </ForwardRef(Select)>
                                        </WithStyles(ForwardRef(Select))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </UserShifts>
                                <NewShift>
                                  <WithStyles(ForwardRef(FormControl))
                                    className="makeStyles-formControl-8"
                                  >
                                    <ForwardRef(FormControl)
                                      className="makeStyles-formControl-8"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiFormControl-root makeStyles-formControl-8"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))
                                          htmlFor="type-selector"
                                        >
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                            htmlFor="type-selector"
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="type-selector"
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="type-selector"
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                  data-shrink={false}
                                                  htmlFor="type-selector"
                                                >
                                                  Swap With
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(Select))
                                          inputProps={
                                            Object {
                                              "id": "type-selector",
                                              "name": "typeSelector",
                                            }
                                          }
                                          native={true}
                                          onChange={[Function]}
                                          value={
                                            Object {
                                              "typeSelect": "",
                                            }
                                          }
                                        >
                                          <ForwardRef(Select)
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "id": "type-selector",
                                                "name": "typeSelector",
                                              }
                                            }
                                            native={true}
                                            onChange={[Function]}
                                            value={
                                              Object {
                                                "typeSelect": "",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(Input))
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "disabled": [Function],
                                                    "inputRef": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onChange": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "children": Array [
                                                    <option
                                                      aria-label="None"
                                                      value=""
                                                    />,
                                                    <option
                                                      value={1}
                                                    >
                                                      Vacation
                                                    </option>,
                                                    <option
                                                      value={2}
                                                    >
                                                      Designated Holiday
                                                    </option>,
                                                    <option
                                                      value={3}
                                                    >
                                                      Illness
                                                    </option>,
                                                    <option
                                                      value={4}
                                                    >
                                                      Non-work learning/ Training
                                                    </option>,
                                                    <option
                                                      value={5}
                                                    >
                                                      Work learning/ Training
                                                    </option>,
                                                    <option
                                                      value={6}
                                                    >
                                                      Military Time Off
                                                    </option>,
                                                    <option
                                                      value={7}
                                                    >
                                                      Parenting Time Off
                                                    </option>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "id": "type-selector",
                                                  "multiple": false,
                                                  "name": "typeSelector",
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              onChange={[Function]}
                                              value={
                                                Object {
                                                  "typeSelect": "",
                                                }
                                              }
                                            >
                                              <ForwardRef(Input)
                                                classes={
                                                  Object {
                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInput-formControl",
                                                    "fullWidth": "MuiInput-fullWidth",
                                                    "input": "MuiInput-input",
                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInput-marginDense",
                                                    "multiline": "MuiInput-multiline",
                                                    "root": "MuiInput-root",
                                                    "underline": "MuiInput-underline",
                                                  }
                                                }
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "disabled": [Function],
                                                      "inputRef": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onChange": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "children": Array [
                                                      <option
                                                        aria-label="None"
                                                        value=""
                                                      />,
                                                      <option
                                                        value={1}
                                                      >
                                                        Vacation
                                                      </option>,
                                                      <option
                                                        value={2}
                                                      >
                                                        Designated Holiday
                                                      </option>,
                                                      <option
                                                        value={3}
                                                      >
                                                        Illness
                                                      </option>,
                                                      <option
                                                        value={4}
                                                      >
                                                        Non-work learning/ Training
                                                      </option>,
                                                      <option
                                                        value={5}
                                                      >
                                                        Work learning/ Training
                                                      </option>,
                                                      <option
                                                        value={6}
                                                      >
                                                        Military Time Off
                                                      </option>,
                                                      <option
                                                        value={7}
                                                      >
                                                        Parenting Time Off
                                                      </option>,
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "id": "type-selector",
                                                    "multiple": false,
                                                    "name": "typeSelector",
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                onChange={[Function]}
                                                value={
                                                  Object {
                                                    "typeSelect": "",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(InputBase))
                                                  classes={
                                                    Object {
                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "error": "Mui-error",
                                                      "focused": "Mui-focused",
                                                      "formControl": "MuiInput-formControl",
                                                      "fullWidth": "MuiInput-fullWidth",
                                                      "input": "MuiInput-input",
                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                      "marginDense": "MuiInput-marginDense",
                                                      "multiline": "MuiInput-multiline",
                                                      "root": "MuiInput-root MuiInput-underline",
                                                      "underline": null,
                                                    }
                                                  }
                                                  fullWidth={false}
                                                  inputComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {
                                                        "IconComponent": [Function],
                                                        "children": [Function],
                                                        "className": [Function],
                                                        "classes": [Function],
                                                        "disabled": [Function],
                                                        "inputRef": [Function],
                                                        "multiple": [Function],
                                                        "name": [Function],
                                                        "onChange": [Function],
                                                        "value": [Function],
                                                        "variant": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  inputProps={
                                                    Object {
                                                      "IconComponent": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "children": Array [
                                                        <option
                                                          aria-label="None"
                                                          value=""
                                                        />,
                                                        <option
                                                          value={1}
                                                        >
                                                          Vacation
                                                        </option>,
                                                        <option
                                                          value={2}
                                                        >
                                                          Designated Holiday
                                                        </option>,
                                                        <option
                                                          value={3}
                                                        >
                                                          Illness
                                                        </option>,
                                                        <option
                                                          value={4}
                                                        >
                                                          Non-work learning/ Training
                                                        </option>,
                                                        <option
                                                          value={5}
                                                        >
                                                          Work learning/ Training
                                                        </option>,
                                                        <option
                                                          value={6}
                                                        >
                                                          Military Time Off
                                                        </option>,
                                                        <option
                                                          value={7}
                                                        >
                                                          Parenting Time Off
                                                        </option>,
                                                      ],
                                                      "classes": Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      },
                                                      "id": "type-selector",
                                                      "multiple": false,
                                                      "name": "typeSelector",
                                                      "type": undefined,
                                                      "variant": "standard",
                                                    }
                                                  }
                                                  multiline={false}
                                                  onChange={[Function]}
                                                  type="text"
                                                  value={
                                                    Object {
                                                      "typeSelect": "",
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(InputBase)
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                                        "adornedStart": "MuiInputBase-adornedStart",
                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled Mui-disabled",
                                                        "error": "Mui-error Mui-error",
                                                        "focused": "Mui-focused Mui-focused",
                                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                        "input": "MuiInputBase-input MuiInput-input",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    inputComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {
                                                          "IconComponent": [Function],
                                                          "children": [Function],
                                                          "className": [Function],
                                                          "classes": [Function],
                                                          "disabled": [Function],
                                                          "inputRef": [Function],
                                                          "multiple": [Function],
                                                          "name": [Function],
                                                          "onChange": [Function],
                                                          "value": [Function],
                                                          "variant": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    inputProps={
                                                      Object {
                                                        "IconComponent": Object {
                                                          "$$typeof": Symbol(react.memo),
                                                          "compare": null,
                                                          "type": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          },
                                                        },
                                                        "children": Array [
                                                          <option
                                                            aria-label="None"
                                                            value=""
                                                          />,
                                                          <option
                                                            value={1}
                                                          >
                                                            Vacation
                                                          </option>,
                                                          <option
                                                            value={2}
                                                          >
                                                            Designated Holiday
                                                          </option>,
                                                          <option
                                                            value={3}
                                                          >
                                                            Illness
                                                          </option>,
                                                          <option
                                                            value={4}
                                                          >
                                                            Non-work learning/ Training
                                                          </option>,
                                                          <option
                                                            value={5}
                                                          >
                                                            Work learning/ Training
                                                          </option>,
                                                          <option
                                                            value={6}
                                                          >
                                                            Military Time Off
                                                          </option>,
                                                          <option
                                                            value={7}
                                                          >
                                                            Parenting Time Off
                                                          </option>,
                                                        ],
                                                        "classes": Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "nativeInput": "MuiSelect-nativeInput",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        },
                                                        "id": "type-selector",
                                                        "multiple": false,
                                                        "name": "typeSelector",
                                                        "type": undefined,
                                                        "variant": "standard",
                                                      }
                                                    }
                                                    multiline={false}
                                                    onChange={[Function]}
                                                    type="text"
                                                    value={
                                                      Object {
                                                        "typeSelect": "",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(NativeSelectInput)
                                                        IconComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.memo),
                                                            "compare": null,
                                                            "type": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            },
                                                          }
                                                        }
                                                        aria-invalid={false}
                                                        className="MuiInputBase-input MuiInput-input"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          }
                                                        }
                                                        disabled={false}
                                                        id="type-selector"
                                                        inputRef={[Function]}
                                                        multiple={false}
                                                        name="typeSelector"
                                                        onAnimationStart={[Function]}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        required={false}
                                                        value={
                                                          Object {
                                                            "typeSelect": "",
                                                          }
                                                        }
                                                        variant="standard"
                                                      >
                                                        <select
                                                          aria-invalid={false}
                                                          className="MuiSelect-root MuiSelect-select MuiInputBase-input MuiInput-input"
                                                          disabled={false}
                                                          id="type-selector"
                                                          multiple={false}
                                                          name="typeSelector"
                                                          onAnimationStart={[Function]}
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          required={false}
                                                          value={
                                                            Object {
                                                              "typeSelect": "",
                                                            }
                                                          }
                                                        >
                                                          <option
                                                            aria-label="None"
                                                            value=""
                                                          />
                                                          <option
                                                            value={1}
                                                          >
                                                            Vacation
                                                          </option>
                                                          <option
                                                            value={2}
                                                          >
                                                            Designated Holiday
                                                          </option>
                                                          <option
                                                            value={3}
                                                          >
                                                            Illness
                                                          </option>
                                                          <option
                                                            value={4}
                                                          >
                                                            Non-work learning/ Training
                                                          </option>
                                                          <option
                                                            value={5}
                                                          >
                                                            Work learning/ Training
                                                          </option>
                                                          <option
                                                            value={6}
                                                          >
                                                            Military Time Off
                                                          </option>
                                                          <option
                                                            value={7}
                                                          >
                                                            Parenting Time Off
                                                          </option>
                                                        </select>
                                                        <ForwardRef(ArrowDropDownIcon)
                                                          className="MuiSelect-icon"
                                                        >
                                                          <WithStyles(ForwardRef(SvgIcon))
                                                            className="MuiSelect-icon"
                                                          >
                                                            <ForwardRef(SvgIcon)
                                                              className="MuiSelect-icon"
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root MuiSelect-icon"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M7 10l5 5 5-5z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(ArrowDropDownIcon)>
                                                      </ForwardRef(NativeSelectInput)>
                                                    </div>
                                                  </ForwardRef(InputBase)>
                                                </WithStyles(ForwardRef(InputBase))>
                                              </ForwardRef(Input)>
                                            </WithStyles(ForwardRef(Input))>
                                          </ForwardRef(Select)>
                                        </WithStyles(ForwardRef(Select))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </NewShift>
                              </div>
                            </Styled(MuiBox)>
                            <Styled(MuiBox)
                              style={
                                Object {
                                  "marginTop": 30,
                                }
                              }
                            >
                              <div
                                className="MuiBox-root MuiBox-root-10"
                                style={
                                  Object {
                                    "marginTop": 30,
                                  }
                                }
                              >
                                <Comment>
                                  <div>
                                    <WithStyles(ForwardRef(TextField))
                                      id="Comment"
                                      label="Comment"
                                      multiline={true}
                                      onChange={[Function]}
                                      rows={4}
                                      style={
                                        Object {
                                          "width": 600,
                                        }
                                      }
                                      value=""
                                      variant="outlined"
                                    >
                                      <ForwardRef(TextField)
                                        classes={
                                          Object {
                                            "root": "MuiTextField-root",
                                          }
                                        }
                                        id="Comment"
                                        label="Comment"
                                        multiline={true}
                                        onChange={[Function]}
                                        rows={4}
                                        style={
                                          Object {
                                            "width": 600,
                                          }
                                        }
                                        value=""
                                        variant="outlined"
                                      >
                                        <WithStyles(ForwardRef(FormControl))
                                          className="MuiTextField-root"
                                          color="primary"
                                          disabled={false}
                                          error={false}
                                          fullWidth={false}
                                          required={false}
                                          style={
                                            Object {
                                              "width": 600,
                                            }
                                          }
                                          variant="outlined"
                                        >
                                          <ForwardRef(FormControl)
                                            className="MuiTextField-root"
                                            classes={
                                              Object {
                                                "fullWidth": "MuiFormControl-fullWidth",
                                                "marginDense": "MuiFormControl-marginDense",
                                                "marginNormal": "MuiFormControl-marginNormal",
                                                "root": "MuiFormControl-root",
                                              }
                                            }
                                            color="primary"
                                            disabled={false}
                                            error={false}
                                            fullWidth={false}
                                            required={false}
                                            style={
                                              Object {
                                                "width": 600,
                                              }
                                            }
                                            variant="outlined"
                                          >
                                            <div
                                              className="MuiFormControl-root MuiTextField-root"
                                              style={
                                                Object {
                                                  "width": 600,
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(InputLabel))
                                                htmlFor="Comment"
                                                id="Comment-label"
                                              >
                                                <ForwardRef(InputLabel)
                                                  classes={
                                                    Object {
                                                      "animated": "MuiInputLabel-animated",
                                                      "asterisk": "MuiInputLabel-asterisk",
                                                      "disabled": "Mui-disabled",
                                                      "error": "Mui-error",
                                                      "filled": "MuiInputLabel-filled",
                                                      "focused": "Mui-focused",
                                                      "formControl": "MuiInputLabel-formControl",
                                                      "marginDense": "MuiInputLabel-marginDense",
                                                      "outlined": "MuiInputLabel-outlined",
                                                      "required": "Mui-required",
                                                      "root": "MuiInputLabel-root",
                                                      "shrink": "MuiInputLabel-shrink",
                                                    }
                                                  }
                                                  htmlFor="Comment"
                                                  id="Comment-label"
                                                >
                                                  <WithStyles(ForwardRef(FormLabel))
                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                    classes={
                                                      Object {
                                                        "asterisk": "MuiInputLabel-asterisk",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "required": "Mui-required",
                                                      }
                                                    }
                                                    data-shrink={false}
                                                    htmlFor="Comment"
                                                    id="Comment-label"
                                                  >
                                                    <ForwardRef(FormLabel)
                                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                      classes={
                                                        Object {
                                                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                          "colorSecondary": "MuiFormLabel-colorSecondary",
                                                          "disabled": "Mui-disabled Mui-disabled",
                                                          "error": "Mui-error Mui-error",
                                                          "filled": "MuiFormLabel-filled",
                                                          "focused": "Mui-focused Mui-focused",
                                                          "required": "Mui-required Mui-required",
                                                          "root": "MuiFormLabel-root",
                                                        }
                                                      }
                                                      data-shrink={false}
                                                      htmlFor="Comment"
                                                      id="Comment-label"
                                                    >
                                                      <label
                                                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                        data-shrink={false}
                                                        htmlFor="Comment"
                                                        id="Comment-label"
                                                      >
                                                        Comment
                                                      </label>
                                                    </ForwardRef(FormLabel)>
                                                  </WithStyles(ForwardRef(FormLabel))>
                                                </ForwardRef(InputLabel)>
                                              </WithStyles(ForwardRef(InputLabel))>
                                              <WithStyles(ForwardRef(OutlinedInput))
                                                autoFocus={false}
                                                fullWidth={false}
                                                id="Comment"
                                                label={
                                                  <React.Fragment>
                                                    Comment
                                                  </React.Fragment>
                                                }
                                                multiline={true}
                                                onChange={[Function]}
                                                rows={4}
                                                value=""
                                              >
                                                <ForwardRef(OutlinedInput)
                                                  autoFocus={false}
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "error": "Mui-error",
                                                      "focused": "Mui-focused",
                                                      "input": "MuiOutlinedInput-input",
                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                      "multiline": "MuiOutlinedInput-multiline",
                                                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                      "root": "MuiOutlinedInput-root",
                                                    }
                                                  }
                                                  fullWidth={false}
                                                  id="Comment"
                                                  label={
                                                    <React.Fragment>
                                                      Comment
                                                    </React.Fragment>
                                                  }
                                                  multiline={true}
                                                  onChange={[Function]}
                                                  rows={4}
                                                  value=""
                                                >
                                                  <WithStyles(ForwardRef(InputBase))
                                                    autoFocus={false}
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                        "adornedStart": "MuiOutlinedInput-adornedStart",
                                                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "input": "MuiOutlinedInput-input",
                                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                        "marginDense": "MuiOutlinedInput-marginDense",
                                                        "multiline": "MuiOutlinedInput-multiline",
                                                        "notchedOutline": null,
                                                        "root": "MuiOutlinedInput-root",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    id="Comment"
                                                    inputComponent="input"
                                                    multiline={true}
                                                    onChange={[Function]}
                                                    renderSuffix={[Function]}
                                                    rows={4}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <ForwardRef(InputBase)
                                                      autoFocus={false}
                                                      classes={
                                                        Object {
                                                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                          "disabled": "Mui-disabled Mui-disabled",
                                                          "error": "Mui-error Mui-error",
                                                          "focused": "Mui-focused Mui-focused",
                                                          "formControl": "MuiInputBase-formControl",
                                                          "fullWidth": "MuiInputBase-fullWidth",
                                                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      id="Comment"
                                                      inputComponent="input"
                                                      multiline={true}
                                                      onChange={[Function]}
                                                      renderSuffix={[Function]}
                                                      rows={4}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-multiline MuiOutlinedInput-multiline"
                                                        onClick={[Function]}
                                                      >
                                                        <textarea
                                                          aria-invalid={false}
                                                          autoFocus={false}
                                                          className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline"
                                                          disabled={false}
                                                          id="Comment"
                                                          onAnimationStart={[Function]}
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          required={false}
                                                          rows={4}
                                                          value=""
                                                        />
                                                        <WithStyles(ForwardRef(NotchedOutline))
                                                          className="MuiOutlinedInput-notchedOutline"
                                                          label={
                                                            <React.Fragment>
                                                              Comment
                                                            </React.Fragment>
                                                          }
                                                          labelWidth={0}
                                                          notched={false}
                                                        >
                                                          <ForwardRef(NotchedOutline)
                                                            className="MuiOutlinedInput-notchedOutline"
                                                            classes={
                                                              Object {
                                                                "legend": "PrivateNotchedOutline-legend-13",
                                                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-14",
                                                                "legendNotched": "PrivateNotchedOutline-legendNotched-15",
                                                                "root": "PrivateNotchedOutline-root-12",
                                                              }
                                                            }
                                                            label={
                                                              <React.Fragment>
                                                                Comment
                                                              </React.Fragment>
                                                            }
                                                            labelWidth={0}
                                                            notched={false}
                                                          >
                                                            <fieldset
                                                              aria-hidden={true}
                                                              className="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline"
                                                            >
                                                              <legend
                                                                className="PrivateNotchedOutline-legendLabelled-14"
                                                              >
                                                                <span>
                                                                  Comment
                                                                </span>
                                                              </legend>
                                                            </fieldset>
                                                          </ForwardRef(NotchedOutline)>
                                                        </WithStyles(ForwardRef(NotchedOutline))>
                                                      </div>
                                                    </ForwardRef(InputBase)>
                                                  </WithStyles(ForwardRef(InputBase))>
                                                </ForwardRef(OutlinedInput)>
                                              </WithStyles(ForwardRef(OutlinedInput))>
                                            </div>
                                          </ForwardRef(FormControl)>
                                        </WithStyles(ForwardRef(FormControl))>
                                      </ForwardRef(TextField)>
                                    </WithStyles(ForwardRef(TextField))>
                                  </div>
                                </Comment>
                              </div>
                            </Styled(MuiBox)>
                          </div>
                        </ForwardRef(CardContent)>
                      </WithStyles(ForwardRef(CardContent))>
                      <WithStyles(ForwardRef(CardActions))
                        style={
                          Object {
                            "justifyContent": "center",
                          }
                        }
                      >
                        <ForwardRef(CardActions)
                          classes={
                            Object {
                              "root": "MuiCardActions-root",
                              "spacing": "MuiCardActions-spacing",
                            }
                          }
                          style={
                            Object {
                              "justifyContent": "center",
                            }
                          }
                        >
                          <div
                            className="MuiCardActions-root MuiCardActions-spacing"
                            style={
                              Object {
                                "justifyContent": "center",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(Button))
                              color="primary"
                              variant="outlined"
                            >
                              <ForwardRef(Button)
                                classes={
                                  Object {
                                    "colorInherit": "MuiButton-colorInherit",
                                    "contained": "MuiButton-contained",
                                    "containedPrimary": "MuiButton-containedPrimary",
                                    "containedSecondary": "MuiButton-containedSecondary",
                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                    "disableElevation": "MuiButton-disableElevation",
                                    "disabled": "Mui-disabled",
                                    "endIcon": "MuiButton-endIcon",
                                    "focusVisible": "Mui-focusVisible",
                                    "fullWidth": "MuiButton-fullWidth",
                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                    "label": "MuiButton-label",
                                    "outlined": "MuiButton-outlined",
                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                    "root": "MuiButton-root",
                                    "sizeLarge": "MuiButton-sizeLarge",
                                    "sizeSmall": "MuiButton-sizeSmall",
                                    "startIcon": "MuiButton-startIcon",
                                    "text": "MuiButton-text",
                                    "textPrimary": "MuiButton-textPrimary",
                                    "textSecondary": "MuiButton-textSecondary",
                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                  }
                                }
                                color="primary"
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary"
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  type="button"
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="button"
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    type="button"
                                  >
                                    <button
                                      className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiButton-label"
                                      >
                                        Submit
                                      </span>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Button)>
                            </WithStyles(ForwardRef(Button))>
                          </div>
                        </ForwardRef(CardActions)>
                      </WithStyles(ForwardRef(CardActions))>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </SwapCard>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </div>
    </ForwardRef(Grid)>
  </WithStyles(ForwardRef(Grid))>
</SwapShifts>
`;
